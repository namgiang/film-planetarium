// @import '../../assets/scss/shared.css';
@import '../../assets/scss/variables.scss';

@mixin on-circle($circle-size, $item-size) {
    position: absolute;
    margin: auto;
    left: 0;
    right: 0;
    width:  $circle-size;
    height: $circle-size;
    padding: 0;
    border-radius: 50%; 
    list-style: none;
    top: (90vh - $circle-size) / 2;

    @for $i from 1 through 30 {
        &.count-#{$i} {
            @include on-circle-dots($item-count: $i, $circle-size: $circle-size, $item-size: $item-size);
        }
    }      
}

@mixin on-circle-mini($circle-size, $item-size) {
    position: absolute;
    margin: auto;
    left: 0;
    right: 0;
    width:  $circle-size;
    height: $circle-size;
    padding: 0;
    border-radius: 50%; 
    list-style: none;
    top: (13vw - $circle-size) / 2;

    .actor-container {
        display: none;
    }
}

@mixin on-circle-dots($item-count, $circle-size, $item-size) {
    .actor-container {
        display: block;
        position: absolute;
        top:  50%;
        left: 50%;
        width:  $item-size;
        height: $item-size;
        margin: -($item-size / 2);

        $angle: (360 / $item-count);
        $rot: random(300);

        @for $i from 1 through $item-count {
            &:nth-of-type(#{$i}) {
                transform: 
                rotate($rot * 1deg) 
                translate($circle-size / 2) 
                rotate($rot * -1deg);
            }

            $rot: $rot + $angle;
        }
    }
}

.circle-container {
    margin: auto;
    animation: easing .5s ease-in-out; 

    @for $i from 0 through 4 {
        &.size-#{$i} {
            $unit: 15vh;
            @include on-circle($circle-size: ($i + 1) * $unit, $item-size: 3vh);

            .actor-container_circle { 
                width: 3vh;
                height: 3vh; 
            }
        }

        &.size-mini-#{$i} {
            $unit: 4vw;
            @include on-circle-mini($circle-size: ($i + 1) * $unit, $item-size: 1vw);

            .actor-container_circle { 
                width: 0;
                height: 0; 
            }
            .actor-name {
                display: none;
            }
        }
    }

    &.size-5 {
        @include on-circle($circle-size: 85vh, $item-size: 3vh);
    }

    &[class*='blue'] {
        border: solid 2px $blue;
    }

    &[class*='pink'] {
        border: solid 2px $pink;
    }

    &[class*='gray'] {
        border: solid 2px $alto;
    }

    .actor-container {
        animation: easing 1s ease-in-out; 
    }

    .actor-container_circle { 
        border-radius: 50%;
        transition: .15s;
        
        &:hover,
        &:active {
            cursor: pointer;

            .actor-tooltip {
                opacity: 1;
            }
        }

        &:active,
        &.selected {
            border: 3px solid white;
        }

        &[class*='blue'] {
            background-color: $blue;

            .actor-tooltip {
                background-color: $blue;
            }
        }

        &[class*='pink'] {
            background-color: $pink;

            .actor-tooltip {
                background-color: $pink;
            }
        }

        &[class*='gray'] {
            background-color: $alto;

           .actor-tooltip {
                background-color: $alto;
            }
        }
    }

    .actor-name {
        background: black;
        position: absolute;
        margin-top: 1vh;
        margin-left: -4vh;
        font-size: .8vw;
        line-height: 1vw !important;
        z-index: 100 !important;

        &.actor-tooltip {
            color: black;
            border-radius: 1vw;
            margin-top: -6vh;
            margin-left: 0;
            padding: 1vh .5vw;
            opacity: 0;
            z-index: 200 !important;
        }

        &:hover,
        &:active {
            cursor: pointer;
        }
    }
}

@media screen and (max-aspect-ratio: 3/2) { 
    .circle-container {
        @for $i from 0 through 4 {
            &.size-#{$i} {
                $unit: 12vh;
                @include on-circle($circle-size: ($i + 1) * $unit, $item-size: 3vh);
            }

            &.size-mini-#{$i} {
                $unit: 18vw;
                @include on-circle-mini($circle-size: ($i + 1) * $unit, $item-size: 1vw);

                .actor-container_circle { 
                    width: 0;
                    height: 0; 
                }
                
                .actor-name {
                  display: none;
                }
            }
        }

        .actor-name {
            font-size: 4vw !important;
            line-height: 6vw !important;  
        }
    }

}

@media screen and (min-device-width: 768px) and (max-device-width: 1366px) and (max-aspect-ratio: 3/2) {
    .circle-container {
        @for $i from 0 through 4 {
            &.size-mini-#{$i} {
                $unit: 10vw;
                @include on-circle-mini($circle-size: ($i + 1) * $unit, $item-size: 1vw);

                .actor-container_circle { 
                  width: 0;
                  height: 0; 
                }
                
                .actor-name {
                  display: none;
                }
            }
        }
    }
}
